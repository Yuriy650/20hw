{"version":3,"sources":["Redux/types.js","Redux/Actions/action.js","Redux/Actions/counter-action.js","Components/Like/Like.js","Components/Post/Post.js","Components/CreatePost/CreatePost.js","App.js","Redux/Reducers/reducer.js","Redux/Reducers/counter-reducer.js","Redux/rootReducer.js","store/index.js","reportWebVitals.js","index.js"],"names":["AUTHORS_ADD_NEW_POST_AUTHORS","COUNTER_ACTION","addNewAuthor","newAuthorPost","type","payload","countLikes","id","connect","state","countValue","count","console","log","Grid","align","Avatar","className","onClick","authors","map","items","src","photo","alt","name","nickname","date","content","image","color","fontSize","mapDispatchToProps","props","textFieldStyle","margin","nameStyle","width","padding","Paper","elevation","style","height","background","onSubmit","e","preventDefault","Math","floor","random","target","value","TextField","label","placeholder","variant","fullWidth","InputLabel","Select","native","labelId","aria-label","Button","App","initialState","rootReducer","combineReducers","action","store","createStore","window","getState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAaA,EAA+B,4BAC/BC,EAAiB,iBCCvB,SAASC,EAAaC,GACzB,MAAO,CACHC,KAAMJ,EACNK,QAASF,G,qBCGFG,EANI,SAACC,GAChB,MAAO,CACHH,KAAMH,EACNI,QAASE,I,kBCoBFC,aANS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,SAIc,CAACL,cAA1BE,EAlBF,SAAC,GAA8B,IAA7BE,EAA4B,EAA5BA,WAAYJ,EAAgB,EAAhBA,WAEvB,OADAM,QAAQC,IAAIH,GAER,cAACI,EAAA,EAAD,CAAMC,MAAO,OAAb,SACI,eAACC,EAAA,EAAD,CAAQC,UAAU,cAAlB,UACI,cAAC,IAAD,IACA,wBAAQC,QAAS,kBAAMZ,KAAvB,SAAsCI,EAAWC,gBC+BjE,IAMeH,eANS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,MAClBF,MAAOA,EAAMU,WAGmB,CAACjB,eAAcI,cAAxCE,EA1Cf,YAAgD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,WAAYJ,EAAa,EAAbA,WAO1B,OANJM,QAAQC,IAAIJ,GAOT,8BACKA,EAAMU,QAAQC,KAAI,SAACC,GAChB,OACA,sBAAKJ,UAAU,UAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,MAAMK,IAAKD,EAAME,MAAOC,IAAI,QAC3C,sBAAKP,UAAU,WAAf,UACI,oBAAGA,UAAU,OAAb,cAAsBI,EAAMI,QAC5B,oBAAGR,UAAU,OAAb,cAAsBI,EAAMK,YAC5B,oBAAGT,UAAU,OAAb,cAAsBI,EAAMM,cAGpC,sBAAKV,UAAU,WAAf,UACI,oBAAGA,UAAU,UAAb,cAAyBI,EAAMO,WAC/B,qBAAKX,UAAU,YAAYK,IAAKD,EAAMQ,MAAOL,IAAI,KACjD,cAACV,EAAA,EAAD,CAAMC,MAAO,OAAb,SACI,eAACC,EAAA,EAAD,CAAUE,QAAS,kBAAMZ,KAAzB,UACI,cAAC,IAAD,CAAqBwB,MAAM,YAAYC,SAAS,UAC/CrB,EAAWC,yB,6CC8CrCqB,EAAqB,CACvB9B,gBAIWM,cAAQ,KAAMwB,EAAdxB,EAtEI,SAACyB,GAChB,IAIMC,EAAiB,CAACC,OAAQ,aAC1BC,EAAY,CAACC,MAAO,IAAKF,OAAQ,WAAYG,QAAS,GA0B5D,OACI,cAACxB,EAAA,EAAD,UACI,eAACyB,EAAA,EAAD,CAAOC,UAAW,GAAIC,MAjCX,CACfH,QAAS,GAAII,OAAQ,OAAQL,MAAO,IACpCF,OAAQ,YAAaQ,WAAY,WA+B7B,UACI,cAAC7B,EAAA,EAAD,CAAMC,MAAO,SAAb,SACI,+CAEJ,uBAAM6B,SA7BK,SAACC,GACpBA,EAAEC,iBAEF,IAAM3C,EAAgB,CAClBI,GAAIwC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBxB,KAAMoB,EAAEK,OAAO,GAAGC,MAClB5B,MAAOsB,EAAEK,OAAO,GAAGC,MACnBzB,SAAUmB,EAAEK,OAAO,GAAGC,MACtBvB,QAASiB,EAAEK,OAAO,GAAGC,MACrBtB,MAAOgB,EAAEK,OAAO,GAAGC,MACnBxB,KAAMkB,EAAEK,OAAO,GAAGC,OAEtBvC,QAAQC,IAAIV,GACZ8B,EAAM/B,aAAaC,GACnB0C,EAAEK,OAAO,GAAGC,MAAQ,GACpBN,EAAEK,OAAO,GAAGC,MAAQ,GACpBN,EAAEK,OAAO,GAAGC,MAAQ,GACpBN,EAAEK,OAAO,GAAGC,MAAQ,GACpBN,EAAEK,OAAO,GAAGC,MAAQ,GACpBN,EAAEK,OAAO,GAAGC,MAAQ,IAUZ,UACI,cAACC,EAAA,EAAD,CAAWX,MAAOL,EAAWX,KAAK,SAASlB,GAAG,SAAS8C,MAAM,eAAejD,KAAK,OACtEkD,YAAY,SAASC,QAAQ,WAAWC,WAAS,IAC5D,cAACJ,EAAA,EAAD,CAAWX,MAAOL,EAAWX,KAAK,YAAYlB,GAAG,OAAO8C,MAAM,YAAYjD,KAAK,OACpEkD,YAAY,WAAWC,QAAQ,WAAWC,WAAS,IAC9D,cAACC,EAAA,EAAD,CAAYlD,GAAG,oCAAf,sBACA,eAACmD,EAAA,EAAD,CAAQjB,MAAOP,EAAgByB,QAAM,EAACpD,GAAG,WAAWqD,QAAQ,oCAA5D,UACI,wBAAQC,aAAW,OAAOV,MAAM,KAChC,wBAAQ5C,GAAG,IAAI4C,MAAM,eAArB,oBACA,wBAAQ5C,GAAG,IAAI4C,MAAM,OAArB,qBAEJ,cAACC,EAAA,EAAD,CAAWX,MAAOP,EAAgBT,KAAK,OAAOlB,GAAG,OAAO8C,MAAM,WAAWjD,KAAK,OACnEkD,YAAY,WAAWC,QAAQ,WAAWC,WAAS,IAC9D,cAACJ,EAAA,EAAD,CAAWX,MAAOP,EAAgBT,KAAK,QAAQlB,GAAG,QAAQ8C,MAAM,iBAAiBjD,KAAK,OAC3EkD,YAAY,iBAAiBC,QAAQ,WAAWC,WAAS,IACpE,cAACC,EAAA,EAAD,CAAYlD,GAAG,OAAf,kBACA,cAAC6C,EAAA,EAAD,CAAWX,MAAOP,EAAgB0B,QAAQ,OAC/BrD,GAAG,OACHH,KAAK,SAChB,cAAC0D,EAAA,EAAD,CAAQrB,MAlDJ,CAACN,OAAQ,aAkDe/B,KAAK,SAASmD,QAAQ,WAAWzB,MAAM,UAAU0B,WAAS,EAAtF,6BC1DLO,MATf,WACE,OACE,gCACE,cAAC,EAAD,CAAY7D,aAAcA,IAC1B,cAAC,EAAD,Q,wBCPC8D,EAAe,CAClB7C,QAAS,CACL,CAAIZ,GAAI,GACJkB,KAAM,mBACNF,MAAO,6FACPG,SAAU,cACVE,QAAS,kDACTC,MAAO,gGACPF,KAAM,cAEV,CACIpB,GAAI,GACJkB,KAAM,OACNF,MAAO,+EACPG,SAAU,eACVE,QAAS,uCACTC,MAAO,gGACPF,KAAM,gBClBX,ICKMsC,EAAcC,YAAgB,CACvC/C,QFeW,WAAmD,IAA/BV,EAA8B,uDAAtBuD,EAAcG,EAAQ,uCAE7D,OAAQA,EAAO/D,MACX,KAAKJ,EAED,OAAO,2BACAS,GADP,IAEIU,QAAQ,GAAD,mBAAMV,EAAMU,SAAZ,CAAqBgD,EAAO9D,YAG3C,QACI,OAAOI,IEzBfE,MDP+B,WAA+B,IAA9BF,EAA6B,uDAAvB,CAACE,MAAO,GAAIwD,EAAW,uCAC7D,OAAOA,EAAO/D,MACV,KAAKH,EACD,OAAO,2BACAQ,GADP,IAEIE,OAAQF,EAAME,MAAQ,IAGlC,OAAOF,KEPE2D,EAAQC,YAAYJ,GACjCK,OAAOF,MAAQA,EACfxD,QAAQC,IAAIuD,EAAMG,YCJlB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACF,cAAC,EAAD,QAGFgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.270d1621.chunk.js","sourcesContent":["export const AUTHORS_ADD_NEW_POST_AUTHORS = 'authors/addNewPostAuthors';\r\nexport const COUNTER_ACTION = 'COUNTER_ACTION';","import {AUTHORS_ADD_NEW_POST_AUTHORS} from \"../types\";\r\n\r\nexport function addNewAuthor(newAuthorPost){\r\n    return {\r\n        type: AUTHORS_ADD_NEW_POST_AUTHORS,\r\n        payload: newAuthorPost\r\n    }\r\n}","import {COUNTER_ACTION} from \"../types\";\r\n\r\nconst countLikes = (id) => {\r\n    return {\r\n        type: COUNTER_ACTION,\r\n        payload: id\r\n    }\r\n}\r\nexport default countLikes;\r\n\r\n","import React from 'react';\r\nimport {Avatar, Grid} from \"@material-ui/core\";\r\nimport countLikes from \"../../Redux/Actions/counter-action\";\r\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\r\nimport {addNewAuthor} from \"../../Redux/Actions/action\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Like = ({countValue, countLikes}) => {\r\n    console.log(countValue)\r\n    return (\r\n        <Grid align={'left'}>\r\n            <Avatar className=\"avatarStyle\" >\r\n                <FavoriteRoundedIcon />\r\n                <button onClick={() => countLikes()}>{countValue.count}</button>\r\n            </Avatar>\r\n\r\n        </Grid>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countValue: state.count,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {countLikes})(Like)","import React from 'react';\r\nimport './Post.css';\r\nimport {connect} from \"react-redux\";\r\nimport {addNewAuthor} from \"../../Redux/Actions/action\";\r\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\r\nimport countLikes from \"../../Redux/Actions/counter-action\";\r\nimport {Avatar, Grid} from \"@material-ui/core\";\r\nimport Like from \"../Like/Like\";\r\nfunction Post({state, countValue, countLikes}) {\r\n    console.log(state);\r\n    const avatarStyle = {\r\n        background: '#12eeff',\r\n        padding: '2px',\r\n        height: '30px'\r\n    }\r\n        return (\r\n       <div>\r\n           {state.authors.map((items) => {\r\n               return (\r\n               <div className=\"newPost\">\r\n                   <div className='authorInfo'>\r\n                       <img className='ava' src={items.photo} alt='ava'/>\r\n                       <div className='nickName'>\r\n                           <p className='data'> {items.name}</p>\r\n                           <p className='data'> {items.nickname}</p>\r\n                           <p className='data'> {items.date}</p>\r\n                       </div>\r\n                   </div>\r\n                   <div className='postInfo'>\r\n                       <p className='content'> {items.content}</p>\r\n                       <img className='postImage' src={items.image} alt=''/>\r\n                       <Grid align={'left'}>\r\n                           <Avatar   onClick={() => countLikes()}>\r\n                               <FavoriteRoundedIcon color=\"secondary\" fontSize=\"small\"/>\r\n                               {countValue.count}\r\n                           </Avatar>\r\n                       </Grid>\r\n                   </div>\r\n               </div>\r\n               )\r\n           })}\r\n       </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countValue: state.count,\r\n        state: state.authors\r\n    };\r\n};\r\nexport default connect(mapStateToProps, {addNewAuthor, countLikes})(Post)\r\n","import React from \"react\";\r\nimport {TextField, Paper, Grid} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n//import {store} from \"../../store\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewAuthor} from \"../../Redux/Actions/action\";\r\n//import {rootReducer} from \"../../Redux/rootReducer\";\r\nexport const ANAKIN_IMAGE = \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\";\r\nexport const PostImage = \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\";\r\nexport const YODA = \"https://upload.wikimedia.org/wikipedia/hu/thumb/4/45/Yoda.jpg/250px-Yoda.jpg\";\r\nexport const YODA_POST = \"https://th.bing.com/th/id/OIP.uQEGqKR6Rn2e0PAR8rHZsgHaEL?w=308&h=180&c=7&o=5&dpr=1.25&pid=1.7\";\r\n\r\n\r\nconst CreatePost = (props) => {\r\n    const paperStyle = {\r\n        padding: 20, height: '75vh', width: 600,\r\n        margin: '20px auto', background: '#ffe107'\r\n    };\r\n    const textFieldStyle = {margin: '15px auto'};\r\n    const nameStyle = {width: 296, margin: '15px 2px', padding: 0};\r\n    const buttonStyle = {margin: '15px auto'};\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(e);\r\n        const newAuthorPost = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            name: e.target[0].value,\r\n            photo: e.target[4].value,\r\n            nickname: e.target[2].value,\r\n            content: e.target[5].value,\r\n            image: e.target[7].value,\r\n            date: e.target[9].value\r\n        }\r\n        console.log(newAuthorPost);\r\n        props.addNewAuthor(newAuthorPost);\r\n        e.target[0].value = '';\r\n        e.target[2].value = '';\r\n        e.target[4].value = '';\r\n        e.target[5].value = '';\r\n        e.target[7].value = '';\r\n        e.target[9].value = '';\r\n\r\n\r\n    }\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={15} style={paperStyle}>\r\n                <Grid align={'center'}>\r\n                    <h2>Create Post</h2>\r\n                </Grid>\r\n                <form onSubmit={handleOnSubmit}>\r\n                    <TextField style={nameStyle} name='author' id='author' label='Authors name' type='text'\r\n                               placeholder='Author' variant='outlined' fullWidth/>\r\n                    <TextField style={nameStyle} name='nick-name' id='last' label='Nick-name' type='text'\r\n                               placeholder='Nickname' variant='outlined' fullWidth/>\r\n                    <InputLabel id=\"demo-controlled-open-select-label\">My Photo</InputLabel>\r\n                    <Select style={textFieldStyle} native id='avatarka' labelId=\"demo-controlled-open-select-label\">\r\n                        <option aria-label=\"None\" value=\"\"/>\r\n                        <option id='1' value='ANAKIN_IMAGE'>ANAKIN</option>\r\n                        <option id='2' value='YODA'>YODA</option>\r\n                    </Select>\r\n                    <TextField style={textFieldStyle} name='text' id='post' label='new text' type='text'\r\n                               placeholder='New text' variant='outlined' fullWidth/>\r\n                    <TextField style={textFieldStyle} name='image' id='image' label='Add post image' type='text'\r\n                               placeholder='New Post Image' variant='outlined' fullWidth/>\r\n                    <InputLabel id=\"date\">Date</InputLabel>\r\n                    <TextField style={textFieldStyle} labelId=\"test\"\r\n                               id=\"date\"\r\n                               type=\"date\"/>\r\n                    <Button style={buttonStyle} type='submit' variant=\"outlined\" color='primary' fullWidth>Post</Button>\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\nconst mapDispatchToProps = {\r\n    addNewAuthor\r\n};\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CreatePost);","import './App.css';\nimport Post from './Components/Post/Post';\nimport CreatePost from \"./Components/CreatePost/CreatePost\";\nimport {addNewAuthor} from \"./Redux/Actions/action\";\n\nfunction App() {\n  return (\n    <div>\n      <CreatePost addNewAuthor={addNewAuthor}/>\n      <Post  />\n    </div>\n  );\n}\n\nexport default App;\n","import {AUTHORS_ADD_NEW_POST_AUTHORS} from \"../types\";\r\n\r\nconst  initialState = {\r\n    authors: [\r\n        {   id: 10,\r\n            name: \"Anakin skywalker\",\r\n            photo: \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n            nickname: \"@dart_vader\",\r\n            content: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\r\n            image: \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\",\r\n            date: '21.01.2021'\r\n        },\r\n        {\r\n            id: 20,\r\n            name: \"Yoda\",\r\n            photo: \"https://upload.wikimedia.org/wikipedia/hu/thumb/4/45/Yoda.jpg/250px-Yoda.jpg\",\r\n            nickname: \"@master_yoda\",\r\n            content: \"Trying is the first step of learning\",\r\n            image: \"https://th.bing.com/th/id/OIP.uQEGqKR6Rn2e0PAR8rHZsgHaEL?w=308&h=180&c=7&o=5&dpr=1.25&pid=1.7\",\r\n            date: '22.01.2021'\r\n        }]\r\n}\r\nexport default function appReducer(state = initialState, action) {\r\n    // The reducer normally looks at the action type field to decide what happens\r\n    switch (action.type) {\r\n        case AUTHORS_ADD_NEW_POST_AUTHORS: {\r\n            // We need to return a new state object\r\n            return {\r\n                ...state,\r\n                authors: [...state.authors, action.payload]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n    }\r\n\r\n\r\n\r\n","import {COUNTER_ACTION} from \"../types\";\r\nexport const counterLikesReducer = (state={count: 5}, action) => {\r\n    switch(action.type) {\r\n        case COUNTER_ACTION:\r\n            return {\r\n                ...state,\r\n                count: +state.count + 1\r\n            }\r\n    }\r\n    return state\r\n}","import { combineReducers } from 'redux';\r\nimport appReducer from \"../Redux/Reducers/reducer\";\r\nimport {counterLikesReducer} from \"./Reducers/counter-reducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    authors: appReducer,\r\n    count:counterLikesReducer\r\n\r\n});","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"../Redux/rootReducer\";\r\nexport const store = createStore(rootReducer);\r\nwindow.store = store;\r\nconsole.log(store.getState());\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './store/index';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}